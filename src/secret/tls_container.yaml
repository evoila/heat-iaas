heat_template_version: 2015-10-15

parameters:

  name:
    type: string

  certificate:
    type: string

  private_key:
    type: string

  intermediates:
    type: string

  payload_content_type:
    type: string
    default: "text/plain"

  mode:
    type: string
    default: cbc

  algorithm:
    type: string
    default: aes

  bit_length:
    type: number
    default: 256

resources:

  certificate_secret:
    type: OS::Barbican::Secret
    properties:
      payload_content_type: { get_param: payload_content_type }
      name: { list_join: ['-', [{ get_param: name }, "cert"]] }
      payload: { get_param: certificate }
      mode: { get_param: mode }
      algorithm: { get_param: algorithm }
      bit_length: { get_param: bit_length }

  private_key_secret:
    type: OS::Barbican::Secret
    properties:
      payload_content_type: { get_param: payload_content_type }
      name: { list_join: ['-', [{ get_param: name }, "privkey"]] }
      payload: { get_param: private_key }
      mode: { get_param: mode }
      algorithm: { get_param: algorithm }
      bit_length: { get_param: bit_length }

  intermediates_secret:
    type: OS::Barbican::Secret
    properties:
      payload_content_type: { get_param: payload_content_type }
      name: { list_join: ['-', [{ get_param: name }, "inter"]] }
      payload: { get_param: intermediates }
      mode: { get_param: mode }
      algorithm: { get_param: algorithm }
      bit_length: { get_param: bit_length }

  container:
    type: OS::Barbican::CertificateContainer
    properties:
      name: { get_param: name }
      certificate_ref: { get_resource: certificate_secret }
      private_key_ref: { get_resource: private_key_secret }
      intermediates_ref: { get_resource: intermediates_secret }

outputs:

  certificate:
    value: { get_resource: certificate_secret }

  private_key:
    value: { get_resource: private_key_secret }

  container: 
    value: { get_resource: container }
